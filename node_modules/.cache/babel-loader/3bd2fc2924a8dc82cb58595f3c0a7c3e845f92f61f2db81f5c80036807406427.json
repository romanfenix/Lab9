{"ast":null,"code":"import React,{useState}from'react';import ExpenseItem from'./ExpenseItem';import ExpenseFilter from'./ExpenseFilter/ExpenseFilter';import Card from'./Card';import NewExpense from'./NewExpense/NewExpense';import'./Expenses.css';import Chart from'./Chart/Chart';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Expenses=props=>{const[filteredYear,setFilteredYear]=useState('2021');const[isAddingExpense,setIsAddingExpense]=useState(false);const filterChangeHandler=selectedYear=>{setFilteredYear(selectedYear);};const startAddExpenseHandler=()=>{setIsAddingExpense(true);};const stopAddExpenseHandler=()=>{setIsAddingExpense(false);};const addExpenseHandler=expense=>{props.onAddExpense(expense);setIsAddingExpense(false);};const filteredExpenses=props.items.filter(expense=>{return expense.date.getFullYear().toString()===filteredYear;});const chartDataPoints=[{label:'Jan',value:0},{label:'Feb',value:0},{label:'Mar',value:0},{label:'Apr',value:0},{label:'May',value:0},{label:'Jun',value:0},{label:'Jul',value:0},{label:'Aug',value:0},{label:'Sep',value:0},{label:'Oct',value:0},{label:'Nov',value:0},{label:'Dec',value:0}];for(const expense of filteredExpenses){const expenseMonth=expense.date.getMonth();chartDataPoints[expenseMonth].value+=expense.amount;}return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(Card,{className:\"expenses\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"add-expense-container\",children:/*#__PURE__*/_jsx(\"button\",{className:\"add-expense-button\",onClick:startAddExpenseHandler,children:\"Add New Expense\"})}),isAddingExpense&&/*#__PURE__*/_jsx(NewExpense,{onAddExpense:addExpenseHandler,onCancel:stopAddExpenseHandler}),/*#__PURE__*/_jsx(ExpenseFilter,{selected:filteredYear,onChangeFilter:filterChangeHandler}),/*#__PURE__*/_jsx(Chart,{dataPoints:chartDataPoints}),filteredExpenses.length===0?/*#__PURE__*/_jsx(\"p\",{children:\"No expenses found.\"}):filteredExpenses.map(expense=>/*#__PURE__*/_jsx(ExpenseItem,{title:expense.title,amount:expense.amount,date:expense.date},expense.id))]})});};export default Expenses;","map":{"version":3,"names":["React","useState","ExpenseItem","ExpenseFilter","Card","NewExpense","Chart","jsx","_jsx","jsxs","_jsxs","Expenses","props","filteredYear","setFilteredYear","isAddingExpense","setIsAddingExpense","filterChangeHandler","selectedYear","startAddExpenseHandler","stopAddExpenseHandler","addExpenseHandler","expense","onAddExpense","filteredExpenses","items","filter","date","getFullYear","toString","chartDataPoints","label","value","expenseMonth","getMonth","amount","children","className","onClick","onCancel","selected","onChangeFilter","dataPoints","length","map","title","id"],"sources":["C:/Lab9/Lab8/simple-react-app/src/components/Expenses.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport ExpenseItem from './ExpenseItem';\r\nimport ExpenseFilter from './ExpenseFilter/ExpenseFilter';\r\nimport Card from './Card';\r\nimport NewExpense from './NewExpense/NewExpense';\r\nimport './Expenses.css';\r\nimport Chart from './Chart/Chart';\r\n\r\nconst Expenses = (props) => {\r\n  const [filteredYear, setFilteredYear] = useState('2021');\r\n  const [isAddingExpense, setIsAddingExpense] = useState(false); \r\n\r\n  const filterChangeHandler = (selectedYear) => {\r\n    setFilteredYear(selectedYear);\r\n  };\r\n\r\n  const startAddExpenseHandler = () => {\r\n    setIsAddingExpense(true); \r\n  };\r\n\r\n  const stopAddExpenseHandler = () => {\r\n    setIsAddingExpense(false);\r\n  };\r\n\r\n  const addExpenseHandler = (expense) => {\r\n    props.onAddExpense(expense);\r\n    setIsAddingExpense(false);\r\n  };\r\n\r\n  const filteredExpenses = props.items.filter((expense) => {\r\n    return expense.date.getFullYear().toString() === filteredYear;\r\n  });\r\n\r\n  const chartDataPoints = [\r\n    { label: 'Jan', value: 0 },\r\n    { label: 'Feb', value: 0 },\r\n    { label: 'Mar', value: 0 },\r\n    { label: 'Apr', value: 0 },\r\n    { label: 'May', value: 0 },\r\n    { label: 'Jun', value: 0 },\r\n    { label: 'Jul', value: 0 },\r\n    { label: 'Aug', value: 0 },\r\n    { label: 'Sep', value: 0 },\r\n    { label: 'Oct', value: 0 },\r\n    { label: 'Nov', value: 0 },\r\n    { label: 'Dec', value: 0 },\r\n  ];\r\n\r\n  for (const expense of filteredExpenses) {\r\n    const expenseMonth = expense.date.getMonth();\r\n    chartDataPoints[expenseMonth].value += expense.amount;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Card className=\"expenses\">\r\n        <div className=\"add-expense-container\">\r\n          <button\r\n            className=\"add-expense-button\"\r\n            onClick={startAddExpenseHandler}\r\n          >\r\n            Add New Expense\r\n          </button>\r\n        </div>\r\n  \r\n        {isAddingExpense && (\r\n          <NewExpense\r\n            onAddExpense={addExpenseHandler}\r\n            onCancel={stopAddExpenseHandler}\r\n          />\r\n        )}\r\n  \r\n        <ExpenseFilter selected={filteredYear} onChangeFilter={filterChangeHandler} />\r\n        <Chart dataPoints={chartDataPoints} />\r\n        \r\n        {filteredExpenses.length === 0 ? (\r\n          <p>No expenses found.</p>\r\n        ) : (\r\n          filteredExpenses.map((expense) => (\r\n            <ExpenseItem\r\n              key={expense.id}\r\n              title={expense.title}\r\n              amount={expense.amount}\r\n              date={expense.date}\r\n            />\r\n          ))\r\n        )}\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Expenses;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}