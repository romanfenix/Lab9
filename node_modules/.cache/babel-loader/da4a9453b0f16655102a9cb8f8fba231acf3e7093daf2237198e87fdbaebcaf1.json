{"ast":null,"code":"var _jsxFileName = \"C:\\\\Lab9\\\\Lab8\\\\simple-react-app\\\\src\\\\components\\\\Expenses.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport ExpenseItem from './ExpenseItem';\nimport ExpenseFilter from './ExpenseFilter/ExpenseFilter';\nimport Card from './Card';\nimport NewExpense from './NewExpense/NewExpense';\nimport './Expenses.css';\nimport Chart from './Chart/Chart';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Expenses = props => {\n  _s();\n  const [filteredYear, setFilteredYear] = useState('2021');\n  const [isAddingExpense, setIsAddingExpense] = useState(false);\n  const filterChangeHandler = selectedYear => {\n    setFilteredYear(selectedYear);\n  };\n  const startAddExpenseHandler = () => {\n    setIsAddingExpense(true);\n  };\n  const stopAddExpenseHandler = () => {\n    setIsAddingExpense(false);\n  };\n  const addExpenseHandler = expense => {\n    props.onAddExpense(expense);\n    setIsAddingExpense(false);\n  };\n  const filteredExpenses = props.items.filter(expense => {\n    return expense.date.getFullYear().toString() === filteredYear;\n  });\n  const chartDataPoints = [{\n    label: 'Jan',\n    value: 0\n  }, {\n    label: 'Feb',\n    value: 0\n  }, {\n    label: 'Mar',\n    value: 0\n  }, {\n    label: 'Apr',\n    value: 0\n  }, {\n    label: 'May',\n    value: 0\n  }, {\n    label: 'Jun',\n    value: 0\n  }, {\n    label: 'Jul',\n    value: 0\n  }, {\n    label: 'Aug',\n    value: 0\n  }, {\n    label: 'Sep',\n    value: 0\n  }, {\n    label: 'Oct',\n    value: 0\n  }, {\n    label: 'Nov',\n    value: 0\n  }, {\n    label: 'Dec',\n    value: 0\n  }];\n  for (const expense of filteredExpenses) {\n    const expenseMonth = expense.date.getMonth();\n    chartDataPoints[expenseMonth].value += expense.amount;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: \"expenses\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"add-expense-container\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"add-expense-button\",\n          onClick: startAddExpenseHandler,\n          children: \"Add New Expense\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), isAddingExpense && /*#__PURE__*/_jsxDEV(NewExpense, {\n        onAddExpense: addExpenseHandler,\n        onCancel: stopAddExpenseHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ExpenseFilter, {\n        selected: filteredYear,\n        onChangeFilter: filterChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Chart, {\n        dataPoints: chartDataPoints\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), filteredExpenses.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No expenses found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this) : filteredExpenses.map(expense => /*#__PURE__*/_jsxDEV(ExpenseItem, {\n        title: expense.title,\n        amount: expense.amount,\n        date: expense.date\n      }, expense.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(Expenses, \"JtjtbSdNtbFbBml1NenQ9z58aTU=\");\n_c = Expenses;\nexport default Expenses;\nvar _c;\n$RefreshReg$(_c, \"Expenses\");","map":{"version":3,"names":["React","useState","ExpenseItem","ExpenseFilter","Card","NewExpense","Chart","jsxDEV","_jsxDEV","Expenses","props","_s","filteredYear","setFilteredYear","isAddingExpense","setIsAddingExpense","filterChangeHandler","selectedYear","startAddExpenseHandler","stopAddExpenseHandler","addExpenseHandler","expense","onAddExpense","filteredExpenses","items","filter","date","getFullYear","toString","chartDataPoints","label","value","expenseMonth","getMonth","amount","children","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onCancel","selected","onChangeFilter","dataPoints","length","map","title","id","_c","$RefreshReg$"],"sources":["C:/Lab9/Lab8/simple-react-app/src/components/Expenses.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport ExpenseItem from './ExpenseItem';\r\nimport ExpenseFilter from './ExpenseFilter/ExpenseFilter';\r\nimport Card from './Card';\r\nimport NewExpense from './NewExpense/NewExpense';\r\nimport './Expenses.css';\r\nimport Chart from './Chart/Chart';\r\n\r\nconst Expenses = (props) => {\r\n  const [filteredYear, setFilteredYear] = useState('2021');\r\n  const [isAddingExpense, setIsAddingExpense] = useState(false); \r\n\r\n  const filterChangeHandler = (selectedYear) => {\r\n    setFilteredYear(selectedYear);\r\n  };\r\n\r\n  const startAddExpenseHandler = () => {\r\n    setIsAddingExpense(true); \r\n  };\r\n\r\n  const stopAddExpenseHandler = () => {\r\n    setIsAddingExpense(false);\r\n  };\r\n\r\n  const addExpenseHandler = (expense) => {\r\n    props.onAddExpense(expense);\r\n    setIsAddingExpense(false);\r\n  };\r\n\r\n  const filteredExpenses = props.items.filter((expense) => {\r\n    return expense.date.getFullYear().toString() === filteredYear;\r\n  });\r\n\r\n  const chartDataPoints = [\r\n    { label: 'Jan', value: 0 },\r\n    { label: 'Feb', value: 0 },\r\n    { label: 'Mar', value: 0 },\r\n    { label: 'Apr', value: 0 },\r\n    { label: 'May', value: 0 },\r\n    { label: 'Jun', value: 0 },\r\n    { label: 'Jul', value: 0 },\r\n    { label: 'Aug', value: 0 },\r\n    { label: 'Sep', value: 0 },\r\n    { label: 'Oct', value: 0 },\r\n    { label: 'Nov', value: 0 },\r\n    { label: 'Dec', value: 0 },\r\n  ];\r\n\r\n  for (const expense of filteredExpenses) {\r\n    const expenseMonth = expense.date.getMonth();\r\n    chartDataPoints[expenseMonth].value += expense.amount;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Card className=\"expenses\">\r\n        <div className=\"add-expense-container\">\r\n          <button\r\n            className=\"add-expense-button\"\r\n            onClick={startAddExpenseHandler}\r\n          >\r\n            Add New Expense\r\n          </button>\r\n        </div>\r\n  \r\n        {isAddingExpense && (\r\n          <NewExpense\r\n            onAddExpense={addExpenseHandler}\r\n            onCancel={stopAddExpenseHandler}\r\n          />\r\n        )}\r\n  \r\n        <ExpenseFilter selected={filteredYear} onChangeFilter={filterChangeHandler} />\r\n        <Chart dataPoints={chartDataPoints} />\r\n        \r\n        {filteredExpenses.length === 0 ? (\r\n          <p>No expenses found.</p>\r\n        ) : (\r\n          filteredExpenses.map((expense) => (\r\n            <ExpenseItem\r\n              key={expense.id}\r\n              title={expense.title}\r\n              amount={expense.amount}\r\n              date={expense.date}\r\n            />\r\n          ))\r\n        )}\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Expenses;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}